{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///external commonjs \"tslib\"","webpack:///external commonjs \"@nestjs/common\"","webpack:///external commonjs \"@nestjs/core\"","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.controller.ts","webpack:///./src/app/app.service.ts","webpack:///./src/audio/audio.module.ts","webpack:///./src/audio/audio.service.ts","webpack:///external commonjs \"fluent-ffmpeg\"","webpack:///external node-commonjs \"fs\"","webpack:///external commonjs \"path\"","webpack:///./src/audio/audio.controller.ts","webpack:///external commonjs \"fastify\"","webpack:///external node-commonjs \"perf_hooks\"","webpack:///external commonjs \"@nestjs/platform-fastify\"","webpack:///external commonjs \"@fastify/compress\"","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["module.exports = require(\"tslib\");","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","import { Module } from '@nestjs/common';\r\n\r\nimport { AppController } from './app.controller';\r\nimport { AppService } from './app.service';\r\nimport { AudioModule } from '../audio/audio.module';\r\n\r\n@Module({\r\n  imports: [AudioModule],\r\n  controllers: [AppController],\r\n  providers: [AppService],\r\n})\r\nexport class AppModule {}\r\n","import { Controller, Get } from '@nestjs/common';\r\n\r\nimport { AppService } from './app.service';\r\n\r\n@Controller()\r\nexport class AppController {\r\n  constructor(private readonly appService: AppService) {}\r\n\r\n  @Get()\r\n  getData() {\r\n    return this.appService.getData();\r\n  }\r\n}\r\n","import { Injectable } from '@nestjs/common';\r\n\r\n@Injectable()\r\nexport class AppService {\r\n  getData(): { message: string } {\r\n    return { message: 'Hello API 1' };\r\n  }\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { AudioService } from './audio.service';\r\nimport { AudioController } from './audio.controller';\r\n\r\n@Module({\r\n  providers: [AudioService],\r\n  controllers: [AudioController],\r\n})\r\nexport class AudioModule {}\r\n","// audio.service.ts\r\nimport { Injectable } from '@nestjs/common';\r\nimport ffmpeg from 'fluent-ffmpeg';\r\nimport * as fs from 'fs';\r\nimport * as path from 'path';\r\nimport stream from 'stream';\r\n\r\n@Injectable()\r\nexport class AudioService {\r\n  async getAudioSnippet(): Promise<stream.Readable> {\r\n    const filePath = path.resolve(\r\n      'C:/Users/juanb/Documents/RADIO/radio-vlc/monitorear/2023/11/6/BlueRadio/BlueRadio_2023-11-06_16-03-30.463924.mp3'\r\n    );\r\n    const outputPath = path.resolve('./output.mp3');\r\n\r\n    // Get the duration of the audio file\r\n    const duration = await new Promise<number>((resolve, reject) => {\r\n      ffmpeg.ffprobe(filePath, (err, metadata) => {\r\n        if (err) reject(err);\r\n        else resolve(metadata.format.duration);\r\n      });\r\n    });\r\n\r\n    // Extract the last 30 seconds of the audio file\r\n    await new Promise<fs.ReadStream>((resolve, reject) => {\r\n      ffmpeg(filePath)\r\n        .setStartTime(duration - 1800)\r\n        .setDuration(1800)\r\n        .audioBitrate(16) // Lower bitrate Reduce tama√±o archivo\r\n        .audioFrequency(8000) // Lower sample rate Reduce el tiempo\r\n        .audioChannels(1) // Convert to mono\r\n        .outputOptions('-preset ultrafast')\r\n        .audioCodec('libmp3lame')\r\n        .toFormat('mp3')\r\n        .output(outputPath)\r\n        .on('end', function () {\r\n          const file = fs.createReadStream(outputPath);\r\n          resolve(file);\r\n        })\r\n        .on('error', function (err) {\r\n          console.log('An error occurred: ' + err.message);\r\n          reject(err);\r\n        })\r\n        .run();\r\n    });\r\n\r\n    const stream = fs.createReadStream(outputPath);\r\n    return stream;\r\n  }\r\n}\r\n","module.exports = require(\"fluent-ffmpeg\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","import { Controller, Get, Res, HttpStatus } from '@nestjs/common';\r\nimport { AudioService } from './audio.service';\r\nimport { FastifyReply } from 'fastify';\r\nimport { performance } from 'perf_hooks';\r\n\r\n@Controller('audio')\r\nexport class AudioController {\r\n  constructor(private readonly audioService: AudioService) {}\r\n\r\n  @Get()\r\n  async getAudio(@Res() res: FastifyReply): Promise<void> {\r\n    try {\r\n      const startTime = performance.now();\r\n      const file = await this.audioService.getAudioSnippet();\r\n      const endTime = performance.now();\r\n      console.log(`Execution time: ${endTime - startTime} milliseconds`);\r\n      res.header('Content-Type', 'audio/mpeg');\r\n      res.send(file);\r\n    } catch (err) {\r\n      res.status(HttpStatus.INTERNAL_SERVER_ERROR).send({ error: err.message });\r\n    }\r\n  }\r\n}\r\n","module.exports = require(\"fastify\");","module.exports = require(\"perf_hooks\");","module.exports = require(\"@nestjs/platform-fastify\");","module.exports = require(\"@fastify/compress\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\r\n * This is not a production server yet!\r\n * This is only a minimal backend to get started.\r\n */\r\n\r\nimport { Logger } from '@nestjs/common';\r\nimport { NestFactory } from '@nestjs/core';\r\n\r\nimport { AppModule } from './app/app.module';\r\n\r\nimport {\r\n  FastifyAdapter,\r\n  NestFastifyApplication,\r\n} from '@nestjs/platform-fastify';\r\nimport compression from '@fastify/compress';\r\n\r\nasync function bootstrap() {\r\n  const app = await NestFactory.create<NestFastifyApplication>(\r\n    AppModule,\r\n    new FastifyAdapter({ logger: true })\r\n  );\r\n  app.register(compression);\r\n  const globalPrefix = 'api';\r\n  app.setGlobalPrefix(globalPrefix);\r\n  const port = process.env.PORT || 3000;\r\n  await app.listen(port, '0.0.0.0');\r\n\r\n  Logger.log(\r\n    `üöÄ Application is running on: http://localhost:${port}/${globalPrefix}`\r\n  );\r\n}\r\n\r\nbootstrap();\r\n"],"names":[],"sourceRoot":""}